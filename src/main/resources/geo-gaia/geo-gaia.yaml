openapi: 3.0.3
info:
  title: Timezone API
  version: v1beta1
  description: Provides timezone information of pairs of coordinates or of the position of places.
  contact:
    name: Geo Team (Distribution)
    email: GEO-Chapter-Distribution@expedia.com
    url: https://expedia.slack.com/archives/C6RGHG5S5
  x-eg-lifecycle: "PLANNED"
  x-eg-tags: []
servers:
  - url: 'https://gaia-rt-tier-2-for-devs.us-west-2.prod.lodgingselect.expedia.com'
    description: Tier 2 Access Point - Prod - us-west-2. Use for exploration / local testing only.
  - url: 'https://gaia-rt-tier-2.us-west-2.lodgingselect.prod.exp-aws.net'
    description: Tier 2 Access Point - Prod - us-west-2 - Transit Gateway Ready. Use for all Tier 2 prod integrations.
  - url: 'https://gaia-rt-tier-1.us-west-2.lodgingselect.prod.exp-aws.net'
    description: Tier 1 Access Point - Prod - us-west-2 - Transit Gateway Ready. Use for all Tier 1 prod integrations.
  - url: 'https://gaia-rt-tier-1.us-east-1.lodgingselect.prod.exp-aws.net'
    description: Tier 1 Access Point - Prod - us-east-1 - Transit Gateway Ready. Use for all Tier 1 prod integrations.
  - url: 'https://gaia-rt.us-west-2.test.lodgingselect.expedia.com'
    description: All Tiers Access Point - Integration - us-west-2. Use for exploration / local testing only.
  - url: 'https://gaia-rt.us-west-2.lodgingselect.test.exp-aws.net'
    description: All Tiers Access Point - Integration - us-west-2 - Transit Gateway Ready. Use for all test integrations.
tags:
  - name: Timezone
    description: Get Timezone information
paths:
  /time-zones/v1beta1/{id_domain}/{ids}:
    get:
      description: Provides timezone information of the ids in a given domain.
      tags:
        - Timezone
      operationId: getTimezoneOfIds
      security:
        - EgTokenAuth:
            - geography.time-zones.read
      parameters:
        - name: id_domain
          description: Domain of the identifiers for which the timezone information is requested.
          in: path
          required: true
          style: simple
          example: eg-place
          schema:
            $ref: '#/components/schemas/IdDomain'
        - name: ids
          description: Identifier(s) for which timezone information is requested.
          in: path
          required: true
          examples:
            ids:
              description: Ids associated with the requested domain.
              value: 4005,2011
              example: 4005,2011
            coordinate pairs:
              description: When the ids are pairs of coordinates, the format is `<latitude>,<longitude>`.
              value: 45.4957721,-73.6567754,34.0433482,-118.3083442
              example: 45.4957721,-73.6567754,34.0433482,-118.3083442
          schema:
            type: string
        - name: date_time
          description: The DateTime for which to return the timezone information. If none is provided, the current UTC time will be used.
          in: query
          required: false
          schema:
            type: string
            format: date-time
          example: "2021-01-30T08:00:00Z"
      responses:
        "200":
          description: Timezone information of the given ids.
          headers:
            Date:
              $ref: "#/components/headers/Date"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimezoneResponse'
        "400":
          description: Bad request parameter.
          headers:
            Date:
              $ref: "#/components/headers/Date"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Coordinates not found.
          headers:
            Date:
              $ref: "#/components/headers/Date"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal server error.
          headers:
            Date:
              $ref: "#/components/headers/Date"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  headers:
    Date: # https://confluence.expedia.biz/display/API1/Error+Schema+Standards+and+Guidelines
      description: "The date and time at which the response was generated (RFC5322 format)."
      schema:
        type: string
      example: "Wed, 24 Feb 2021 15:13:24 GMT"
  schemas:
    IdDomain:
      type: string
      enum:
        - eg-place
        - eg-property
        - google
        - iata
        - coordinates # Coordinates in the format {latitude},{longitude}
    Timezone:
      type: object
      required:
        - id
        - database_name
        - utc_offset
      properties:
        id:
          type: string
          description: Identifier for which timezone information is requested.
          example: "4005"
        database_name:
          type: string
          description: The Database Name of the timezone.
          example: America/New_York
        utc_offset:
          type: string
          description: The UTC offset at the requested (if requested) or current DateTime.
          example: -04:00
    TimezoneResponse:
      type: array
      items:
        $ref: '#/components/schemas/Timezone'
    Error:
      description: |
        The object used the describe an error, containing both human-readable and in a machine-readable information.
        Copied from https://confluence.expedia.biz/pages/viewpage.action?spaceKey=API1&title=Error+Schema+Standards+and+Guidelines
      title: Error
      type: object
      properties:
        type:
          description: >
            A URI reference, compliant with the standard EG error type format, which identifies the error type.<br>
            It provides a machine-readable identifier for the error type.<br>
            The error type will be aligned with the HTTP status code of the response.<br>
            The URI can either be absolute or relative to the API's base URI.<br>
            When dereferenced, it can also provide human-readable documentation for the error type.
          type: string
          format: URI
          example: "https://apis.expediagroup.com/errors/common/invalid-argument"
        detail:
          description: A human-readable explanation of the error, specific to this error occurrence.
          type: string
          example: "The request failed because one or many input values are invalid. Please see the causes for more details."
        causes:
          description: "An array of cause objects, that identify the specific causes of the error."
          type: array
          items:
            $ref: "#/components/schemas/ErrorCause"
      required:
        - type
        - detail
    ErrorCause:
      description: The object used to describe a cause for an error, containing both human-readable and in a machine-readable information.
      title: Cause
      type: object
      properties:
        type:
          description: >
            A URI reference, compliant with the standard EG error type format, which identifies the cause type.<br>
            It provides a machine-readable identifier for the cause type.<br>
            The cause type will be aligned with the error type.<br>
            The URI can either be absolute or relative to the API's base URI.<br>
            When dereferenced, it provides human-readable documentation for the cause type.
          type: string
          format: URI
          example: "https://apis.expediagroup.com/errors/common/invalid-number"
        detail:
          description: A human-readable explanation of the cause, specific to this cause occurrence.
          type: string
          example: "The number of results per page you provided ('NotANumber') is invalid. Please provide a valid integer value between 1 and 100."
        location:
          description: |
            The location of the element in the request that identifies this specific cause. When specified, the `name` will be specified and when applicable, the `value` as well. Can be one of:
            * `header` - When an error has been identified in one of the request headers.
            * `path` - When an error has been identified in one of the path parameters.
            * `query` - When an error has been identified in one of the query parameters.
            * `body` - When an error has been identified in the request body.
          type: string
          enum:
            - header
            - path
            - query
            - body
          example: query
        name:
          description: |
            The name of the element for this cause. When specified, the `location` will be specified and when applicable, the `value` as well. This name is a function of the value of the `location` property:
              * When the `location` is set to `header`, this will be the name of the request header (e.g. `Content-Type`).
              * When the `location` is set to `path`, this will be the name of the path parameter (e.g. in a path defined as `/users/{user_id}`, the value would be `user_id`).
              * When the `location` is set to `query`, this will be the name of the query string parameter (e.g. `offset`).
              * When the `location` is set to `body`, this will one of the field names specified in the body of the request.
                * For a top level field, it should only be set to the field name (e.g. `firstName`).
                * For a field in a nested object, it may contain the path to reach the field (e.g. `address.city`).
                * For a field in an object part of collection, it may contain the index in the collection (e.g. `permissions[0].name`).
          type: string
          example: "results_per_page"
        value:
          description: >
            A string representation of the erroneous value of the element identified in `name`, perceived to be the cause of the error.<br>
            When specified, the `location` and `name` should be specified as well.<br>
            This value may be omitted in cases where it cannot be provided (e.g. missing require field), or the erroneous value cannot be represented as a string.
          type: string
          example: "NotANumber"
      required:
        - type
        - detail
  securitySchemes:
    EgTokenAuth:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://identity-authorization-server.us-west-2.test.eguser.expedia.com/api/v1/token
          scopes:
            geography.time-zones.read: timezone read operations